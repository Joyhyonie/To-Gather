<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.greedy.togather.user.project.dao.ProjectMapper">

	<!-- 카테고리 선택 or 검색어 입력을 통해 프로젝트 리스트 조회를 위한 resultMap -->
	<resultMap type="com.greedy.togather.user.project.dto.ProjectDTO" id="viewProjectsResultMap">
		<id property="projNo" column="PROJ_NO" />
		<result property="projName" column="PROJ_NM" />
		<result property="projSummary" column="PROJ_SUMMARY" />
		<result property="fundingEndDate" column="FUNDING_END_DATE" />
		<result property="fundingGoal" column="FUNDING_GOAL" />
		<result property="fundingAchive" column="FUNDING_ACHIVE" />
		<result property="projStatus" column="PROJ_STATUS" />
		<result property="leftDays" column="LEFT_DAYS" /> <!-- 쿼리문에서 가공된 데이터 -->
		<result property="percent" column="PERCENT" /> <!-- 쿼리문에서 가공된 데이터 -->

		<association property="category" resultMap="categoryResultMap" />
		<association property="maker" resultMap="makerResultMap" />
		<collection property="likeList" resultMap="likeResultMap" />
		<collection property="fileList" resultMap="fileResultMap" />
	</resultMap>

	<!-- 프로젝트의 상세 페이지 조회를 위한 resultMap -->
	<resultMap type="com.greedy.togather.user.project.dto.ProjectDTO" id="viewProjectDetailResultMap">
		<id property="projNo" column="PROJ_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="projName" column="PROJ_NM" />
		<result property="projDetail" column="PROJ_DETAIL" />
		<result property="projInfoTitle" column="PROJ_INFO_TITLE" />
		<result property="projInfoBody" column="PROJ_INFO_BODY" />
		<result property="fundingEndDate" column="FUNDING_END_DATE" />
		<result property="fundingGoal" column="FUNDING_GOAL" />
		<result property="fundingAchive" column="FUNDING_ACHIVE" />
		<result property="projStatus" column="PROJ_STATUS" />
		<result property="projReview" column="PROJ_REVIEW" />
		<result property="leftDays" column="LEFT_DAYS" /> <!-- 쿼리문에서 가공된 데이터 -->
		<result property="percent" column="PERCENT" /> <!-- 쿼리문에서 가공된 데이터 -->
		<result property="totalLikes" column="TOTAL_LIKES" /> <!-- 쿼리문에서 가공된 데이터 -->

		<association property="maker" resultMap="makerResultMap" />
		<!-- <collection property="likeList" resultMap="likeResultMap"/> -->
		<collection property="fileList" resultMap="fileResultMap" />
		<collection property="replyList" resultMap="replyResultMap" />
	</resultMap>

	<!-- CategoryDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.CategoryDTO" id="categoryResultMap">
		<id property="categoryNo" column="CATEGORY_NO" />
		<result property="projField" column="PROJ_FIELD" />
	</resultMap>

	<!-- MakerDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.MakerDTO" id="makerResultMap">
		<id property="projNo" column="PROJ_NO" />
		<result property="makerProfileName" column="MAKER_PROFILE_NM"/>
		<result property="makerName" column="MAKER_NM" />
		<result property="maerAddress" column="MAKER_ADDRESS" />
		<result property="makerPhone" column="MAKER_PHONE" />
		<result property="makerEmail" column="MAKER_EMAIL" />
		<result property="makerIntro" column="MAKER_INTRO" />
	</resultMap>

	<!-- LikeDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.LikeDTO" id="likeResultMap">
		<id property="likeNo" column="LIKE_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="projNo" column="PROJ_NO" />
		
		<collection property="user" javaType="com.greedy.togather.user.user.model.dto.UserDTO">
			<id property="userNo" column="USER_NO" />
		</collection>
	</resultMap>

	<!-- RewardDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.RewardDTO" id="rewardResultMap">
		<id property="rewardNo" column="REWARD_NO" />
		<result property="projNo" column="PROJ_NO" />
		<result property="rewardName" column="REWARD_NM" />
		<result property="rewardContent" column="REWARD_CONTENT" />
		<result property="rewardPrice" column="REWARD_PRICE" />
		<result property="rewardFee" column="REWARD_FEE" />
		<result property="rewardDueDate" column="REWARD_DUE_DATE" />
		<result property="orderCount" column="ORDER_COUNT" /> <!-- 쿼리문에서 가공된 데이터 -->

		<collection property="orderList" resultMap="orderResultMap" />
	</resultMap>

	<!-- ReplyDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.ReplyDTO" id="replyResultMap">
		<id property="replyNo" column="REPLY_NO" />
		<result property="userNo" column="USER_NO" />
		<!-- <result property="projNo" column="PROJ_NO" /> --> <!-- 댓글이 없을 경우, 페이지가 로드되지 않으므로 주석처리 -->
		<result property="replyBody" column="REPLY_BODY" />
		<result property="replyRegDate" column="REPLY_REG_DATE" />
		<result property="donation" column="DONATION" />
		<result property="userId" column="USER_ID" /> <!-- 쿼리문에서 가공된 데이터 -->
		<result property="totalDonation" column="TOTAL_DONATION" /> <!-- 쿼리문에서 가공된 데이터 -->
		<result property="totalReply" column="TOTAL_REPLY" /> <!-- 쿼리문에서 가공된 데이터 -->

		<association property="writer" javaType="com.greedy.togather.user.user.model.dto.UserDTO">
			<id property="userNo" column="USER_NO" />
			<result property="email" column="EMAIL" />
			<result property="pwd" column="PWD" />
			<result property="userNm" column="USER_NM" />
			<result property="profileNm" column="PROFILE_NM" />
			<result property="phone" column="PHONE" />
			<result property="address" column="ADDRESS" />
			<result property="joinDate" column="JOIN_DATE" />
			<result property="quitDate" column="QUIT_DATE" />
			<result property="quitYn" column="QUIT_YN" />
			<result property="userToken" column="USER_TOKEN" />
		</association>
	</resultMap>

	<!-- FileDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.FileDTO" id="fileResultMap">
		<id property="fileNo" column="FILE_NO" />
		<result property="projNo" column="PROJ_NO" />
		<result property="fileType" column="FILE_TYPE" />
		<result property="originalFileName" column="ORIGINAL_FILE_NM" />
		<result property="savedFileName" column="SAVED_FILE_NM" />
		<result property="filePath" column="FILE_PATH" />
		<result property="thumPath" column="THUM_PATH" />
	</resultMap>

	<!-- OrderDTO -->
	<resultMap type="com.greedy.togather.user.project.dto.OrderDTO" id="orderResultMap">
		<id property="orderNo" column="ORDER_NO" />
		<result property="rewardNo" column="REWARD_NO" />
	</resultMap>

	<!-- ========================================================================================================= -->

	<!-- 검색된 프로젝트 조회 -->
	<select id="selectSearchedProjectList" resultMap="viewProjectsResultMap">
		SELECT
	      A.PROJ_NO
	    , B.THUM_PATH
	    , A.PROJ_SUMMARY
	    , A.PROJ_NM
	    , TRUNC(A.FUNDING_END_DATE - SYSDATE) AS LEFT_DAYS
	    , A.FUNDING_ACHIVE
	    , TRUNC(A.FUNDING_ACHIVE / A.FUNDING_GOAL * 100) AS PERCENT
	    , A.PROJ_STATUS
	    , C.MAKER_NM
	    , (SELECT COUNT(LIKE_NO) FROM TBL_LIKE D WHERE D.PROJ_NO = A.PROJ_NO) AS TOTAL_LIKES
	    FROM TBL_PROJECT A
	    LEFT JOIN TBL_FILE B ON A.PROJ_NO = B.PROJ_NO
	    LEFT JOIN TBL_MAKER C ON A.PROJ_NO = C.PROJ_NO
	    WHERE A.PROJ_STATUS IN ('진행', '마감')
	    AND A.PROJ_NM LIKE '%'||#{ word }||'%'
        OR C.MAKER_NM LIKE '%'||#{ word }||'%'
	    ORDER BY A.PROJ_NO DESC 
	</select>

	<!-- 프로젝트 리스트 조회 -->
	<select id="selectProjectList" resultMap="viewProjectsResultMap">
		SELECT
	      A.PROJ_NO
	    , B.THUM_PATH
	    , A.PROJ_SUMMARY
	    , A.PROJ_NM
	    , TRUNC(A.FUNDING_END_DATE - SYSDATE) AS LEFT_DAYS
	    , A.FUNDING_ACHIVE
	    , TRUNC(A.FUNDING_ACHIVE / A.FUNDING_GOAL * 100) AS PERCENT
	    , A.PROJ_STATUS
	    , C.MAKER_NM
	    FROM TBL_PROJECT A
	    LEFT JOIN TBL_FILE B ON A.PROJ_NO = B.PROJ_NO
	    LEFT JOIN TBL_MAKER C ON A.PROJ_NO = C.PROJ_NO
	    WHERE A.PROJ_STATUS IN ('진행', '마감')
	    AND A.CATEGORY_NO = #{ categoryNo }
	    ORDER BY A.PROJ_NO DESC 
	</select>

	<!-- 프로젝트 상세 페이지 조회 -->
	<select id="selectProjectDetail"
		resultMap="viewProjectDetailResultMap">
		SELECT
		A.PROJ_NO
		, A.USER_NO
		, TRUNC(A.FUNDING_END_DATE - SYSDATE) AS LEFT_DAYS
		, A.PROJ_NM
		, A.FUNDING_ACHIVE
		, TRUNC(A.FUNDING_ACHIVE / A.FUNDING_GOAL * 100) AS PERCENT
		, A.FUNDING_GOAL AS
		, C.MAKER_PROFILE_NM
		, C.MAKER_NM
		, C.MAKER_INTRO
		, C.MAKER_EMAIL
		, (SELECT COUNT(LIKE_NO) FROM TBL_LIKE D WHERE D.PROJ_NO = A.PROJ_NO)
		AS TOTAL_LIKES
		, A.PROJ_INFO_TITLE
		, A.PROJ_INFO_BODY
		, A.PROJ_DETAIL
		, A.PROJ_REVIEW
		, B.SAVED_FILE_NM
		, B.FILE_PATH
		, D.REPLY_NO
		, D.USER_NO
		, D.REPLY_BODY
		, D.REPLY_REG_DATE
		, D.DONATION
		, E.PROFILE_NM
		, SUBSTR(E.EMAIL, 1, INSTR(E.EMAIL, '@') -1) AS USER_ID
		FROM TBL_PROJECT A
		LEFT OUTER JOIN TBL_FILE B ON(A.PROJ_NO = B.PROJ_NO AND B.FILE_TYPE IN
		('대표사진', '서브사진'))
		LEFT JOIN TBL_MAKER C ON(A.PROJ_NO = C.PROJ_NO)
		LEFT JOIN TBL_REPLY D ON(A.PROJ_NO = D.PROJ_NO)
		LEFT JOIN TBL_USER E ON(D.USER_NO = E.USER_NO)
		WHERE A.PROJ_NO = #{ projNo }
		AND A.PROJ_STATUS IN ('진행', '마감')
		ORDER BY D.REPLY_NO DESC, B.FILE_NO
	</select>

	<!-- 프로젝트 상세 페이지 중, 리워드 조회 -->
	<select id="selectRewardList" resultMap="rewardResultMap">
		SELECT
		A.REWARD_NO
		, A.REWARD_NM
		, A.REWARD_CONTENT
		, A.REWARD_PRICE
		, A.REWARD_DUE_DATE
		, (SELECT COUNT(ORDER_NO) FROM TBL_ORDER B WHERE B.REWARD_NO =
		A.REWARD_NO) AS ORDER_COUNT
		FROM TBL_REWARD A
		WHERE A.PROJ_NO = #{ projNo }
		ORDER BY A.REWARD_PRICE
	</select>

	<!-- 프로젝트 상세 페이지 중, 댓글 조회 -->
	<select id="selectReplyList" resultMap="replyResultMap">
		SELECT
		A.REPLY_NO
		, A.USER_NO
		, A.REPLY_BODY
		, A.DONATION
		, A.REPLY_REG_DATE
		, B.PROFILE_NM
		, SUBSTR(B.EMAIL, 1, INSTR(B.EMAIL, '@') -1) AS USER_ID
		, A.PROJ_NO
		FROM TBL_REPLY A
		LEFT JOIN TBL_USER B ON(A.USER_NO = B.USER_NO)
		WHERE PROJ_NO = #{ projNo }
		ORDER BY A.REPLY_NO DESC
	</select>

	<!-- 프로젝트 상세 페이지 중, 총 기부금 & 댓글 개수 조회 -->
	<select id="selectDonationAndReplyCount" resultMap="replyResultMap">
		SELECT
		SUM(DONATION) AS TOTAL_DONATION
		, COUNT(REPLY_NO) AS TOTAL_REPLY
		FROM TBL_REPLY
		WHERE PROJ_NO = #{ projNo }
	</select>

	<!-- 댓글 등록 -->
	<insert id="insertReply">
		INSERT
		INTO TBL_REPLY A
		(
		A.REPLY_NO
		, A.USER_NO
		, A.PROJ_NO
		, A.REPLY_BODY
		, A.REPLY_REG_DATE
		, A.DONATION
		)
		VALUES
		(
		'RE'||LPAD(SEQ_REPLY_NO.NEXTVAL, 9, '0')
		, #{ writer.userNo }
		, #{ projNo }
		, #{ replyBody }
		, SYSDATE
		, #{ donation }
		)
	</insert>

	<!-- ========================================================================================================= -->

	<!-- TBL_PROJECT 정보 등록 -->
	<insert id="insertProjectInfo">
		INSERT
	    INTO TBL_PROJECT
	    (
	        PROJ_NO
	    ,   CATEGORY_NO
	    ,   USER_NO
	    ,   PROJ_NM
	    ,   PROJ_SUMMARY
	    ,   PROJ_DETAIL
	    ,   PROJ_INFO_TITLE
	    ,   PROJ_INFO_BODY
	    ,   FUNDING_START_DATE
	    ,   FUNDING_END_DATE
	    ,   FUNDING_GOAL
	    ,   PROJ_STATUS
	    )
	    VALUES
	    (
	        'PJ'||LPAD(SEQ_PROJ_NO.NEXTVAL, 9, '0')
	    ,   #{ categoryNo }
	    ,   #{ writer.userNo }
	    ,   #{ projName }
	    ,   #{ projSummary }
	    ,   #{ projDetail }
	    ,   #{ projInfoTitle }
	    ,   #{ projInfoBody }
	    ,   #{ fundingStartDate }
	    ,   #{ fundingEndDate  }
	    ,   #{ fundingGoal }
	    ,   '심사'
	    )
	</insert>
	
	<!-- TBL_MAKER 정보 등록 -->
	<insert id="insertMakerInfo">
		INSERT
	    INTO TBL_MAKER
	    (
	        PROJ_NO
	    ,	MAKER_PROFILE_NM
	    ,   MAKER_NM
	    ,   MAKER_ADDRESS
	    ,   MAKER_PHONE
	    ,   MAKER_EMAIL
	    ,   MAKER_INTRO
	    )
	    VALUES
	    (
	        'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,	#{ makerProfileName }
	    ,   #{ makerName }
	    ,   #{ makerAddress }
	    ,   #{ makerPhone }
	    ,   #{ makerEmail }
	    ,   #{ makerIntro }
	    )
	</insert>
	
	<!-- TBL_REWARD 정보 등록 -->
	<insert id="insertRewardInfo">
		INSERT
	    INTO TBL_REWARD
	    (
	        REWARD_NO
	    ,   PROJ_NO
	    ,   REWARD_NM
	    ,   REWARD_CONTENT
	    ,   REWARD_PRICE
	    ,   REWARD_FEE
	    ,   REWARD_DUE_DATE
	    )
	    VALUES
	    (
	        'RW'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ rewardName }
	    ,   #{ rewardContent }
	    ,   #{ rewardPrice }
	    ,   #{ rewardFee }
	    ,   #{ rewardDueDate }
	    )
	</insert>

	<!-- TBL_FILE 정보 등록 -->
	<!-- 메이커 프로필 -->
	<insert id="insertMakerProfile">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>
	
	<!-- 메인 사진 -->
	<insert id="insertMainImage">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>
	
	<!-- 서브 사진 -->
	<insert id="insertSubImage">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>
	
	<!-- 정산 서류 -->
	<insert id="insertSettleDoc">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>
	
	<!-- 통장 사본 -->
	<insert id="insertAccountDoc">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>
	
	<!-- 기타 서류 -->
	<insert id="insertEtcDoc">
		INSERT 
	    INTO TBL_FILE
	    (
	        FILE_NO
	    ,   PROJ_NO
	    ,   FILE_TYPE
	    ,   ORIGINAL_FILE_NM
	    ,   SAVED_FILE_NM
	    ,   FILE_PATH
	    ,   THUM_PATH
	    )
	    VALUES
	    (
	        'AT'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   'PJ'||LPAD(SEQ_PROJ_NO.CURRVAL, 9, '0')
	    ,   #{ fileType }
	    ,   #{ originalFileName }
	    ,   #{ savedFileName }
	    ,   #{ filePath }
	    ,   #{ thumPath }
	    )
	</insert>

	<!-- ========================================================================================================= -->
	
	<!-- 후기 등록 -->
	<update id="updateReview">
		UPDATE
	        TBL_PROJECT
	    SET PROJ_REVIEW = #{ projReview }
	    WHERE PROJ_NO = #{ projNo }
	</update>
	
	<!-- ========================================================================================================= -->
	
	<!-- 현재 사용자가 해당 프로젝트를 좋아요 했는지 조회 (첫 로드 시)-->
	<select id="loadIsLiked" resultType="_int">
		SELECT
	        COUNT(*)
	    FROM TBL_LIKE
	    WHERE USER_NO = #{ user.userNo }
	    AND PROJ_NO = #{ projNo }
	</select>
	
	<!-- 현재 사용자가 해당 프로젝트를 좋아요 했는지 조회 (비동기 요청 시)-->
	<select id="isLikedByUser" resultType="_int">
		SELECT
	        COUNT(*)
	    FROM TBL_LIKE
	    WHERE USER_NO = #{ user.userNo }
	    AND PROJ_NO = #{ projNo }
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="insertProjectLike">
		INSERT
	    INTO TBL_LIKE
	    (
	        LIKE_NO
	    ,   USER_NO
	    ,   PROJ_NO
	    )
	    VALUES
	    (
	        'LI'||LPAD(SEQ_REWARD_NO.NEXTVAL, 9, '0')
	    ,   #{ user.userNo }
	    ,   #{ projNo }
	    )
	</insert>
	
	<!-- 좋아요 취소 -->
	<delete id="deleteProjectLike">
		DELETE
	    FROM TBL_LIKE
	    WHERE USER_NO = #{ user.userNo }
	    AND PROJ_NO = #{ projNo }
	</delete>

</mapper>